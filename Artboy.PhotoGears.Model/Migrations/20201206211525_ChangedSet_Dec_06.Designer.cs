// <auto-generated />
using System;
using Artboy.PhotoGears.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Artboy.PhotoGears.Models.Migrations
{
    [DbContext(typeof(PhotoGearsDbContext))]
    [Migration("20201206211525_ChangedSet_Dec_06")]
    partial class ChangedSet_Dec_06
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Artboy.PhotoGears.Models.Accessory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("AccessoryDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccessoryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsForSale")
                        .HasColumnType("bit");

                    b.Property<int>("MadeInCountry")
                        .HasColumnType("int");

                    b.Property<string>("Maker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accessories");
                });

            modelBuilder.Entity("Artboy.PhotoGears.Models.Camera", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CameraType")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExposureCompensation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExposureMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FocusingType")
                        .HasColumnType("int");

                    b.Property<string>("FrameSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasInterchangeableLens")
                        .HasColumnType("bit");

                    b.Property<int>("ImageType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDigital")
                        .HasColumnType("bit");

                    b.Property<bool>("IsForSale")
                        .HasColumnType("bit");

                    b.Property<string>("IsoRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LensId")
                        .HasColumnType("bigint");

                    b.Property<int>("MadeInCountry")
                        .HasColumnType("int");

                    b.Property<string>("Maker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MountId")
                        .HasColumnType("int");

                    b.Property<string>("PowerSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shutter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpeedRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LensId");

                    b.HasIndex("MountId");

                    b.ToTable("Cameras");
                });

            modelBuilder.Entity("Artboy.PhotoGears.Models.GearImage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("AccessoryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CameraId")
                        .HasColumnType("bigint");

                    b.Property<int>("ImageCategory")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<long?>("LensId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccessoryId");

                    b.HasIndex("CameraId");

                    b.HasIndex("LensId");

                    b.ToTable("GearImages");
                });

            modelBuilder.Entity("Artboy.PhotoGears.Models.Lens", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("ApertureRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CloseFocusingDistance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DiaphragmBlades")
                        .HasColumnType("int");

                    b.Property<string>("Dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("FilterSize")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FocalLength")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FocusingType")
                        .HasColumnType("int");

                    b.Property<bool>("IsAttachedToCamera")
                        .HasColumnType("bit");

                    b.Property<bool>("IsForSale")
                        .HasColumnType("bit");

                    b.Property<int>("LensCategory")
                        .HasColumnType("int");

                    b.Property<string>("LensConstruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LensType")
                        .HasColumnType("int");

                    b.Property<int>("MadeInCountry")
                        .HasColumnType("int");

                    b.Property<string>("Maker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MaxReproductionRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MountId")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MountId");

                    b.ToTable("Lenses");
                });

            modelBuilder.Entity("Artboy.PhotoGears.Models.Mount", b =>
                {
                    b.Property<int>("MountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("FlangeFocalDistance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MountType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ThreadDiameter")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MountId");

                    b.ToTable("Mounts");
                });

            modelBuilder.Entity("Artboy.PhotoGears.Models.Camera", b =>
                {
                    b.HasOne("Artboy.PhotoGears.Models.Lens", "AssociatedLens")
                        .WithMany()
                        .HasForeignKey("LensId");

                    b.HasOne("Artboy.PhotoGears.Models.Mount", "LensMount")
                        .WithMany()
                        .HasForeignKey("MountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssociatedLens");

                    b.Navigation("LensMount");
                });

            modelBuilder.Entity("Artboy.PhotoGears.Models.GearImage", b =>
                {
                    b.HasOne("Artboy.PhotoGears.Models.Accessory", null)
                        .WithMany("Images")
                        .HasForeignKey("AccessoryId");

                    b.HasOne("Artboy.PhotoGears.Models.Camera", null)
                        .WithMany("Images")
                        .HasForeignKey("CameraId");

                    b.HasOne("Artboy.PhotoGears.Models.Lens", null)
                        .WithMany("Images")
                        .HasForeignKey("LensId");
                });

            modelBuilder.Entity("Artboy.PhotoGears.Models.Lens", b =>
                {
                    b.HasOne("Artboy.PhotoGears.Models.Mount", "LensMount")
                        .WithMany()
                        .HasForeignKey("MountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LensMount");
                });

            modelBuilder.Entity("Artboy.PhotoGears.Models.Accessory", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Artboy.PhotoGears.Models.Camera", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Artboy.PhotoGears.Models.Lens", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
